{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/home/wyu/Desktop/puyo/puyo/src/components/Puyo.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { createStage, STAGE_HEIGHT, STAGE_WIDTH } from '../gameHelpers';\nimport Stage from './Stage';\nimport Display from './Display';\nimport Button from './Button';\nimport { useState } from 'react';\nimport { useCurrentBlock } from '../hooks/useCurrentBlock';\nimport { useStage } from '../hooks/useStage';\nimport { randomBlock } from '../block';\nimport \"./Puyo.css\";\n\nconst Puyo = () => {\n  _s();\n\n  // GameOver is initially false\n  const [gameOver, setGameOver] = useState(false);\n  const [currentBlock, setCurBlock, updateCurPos, resetCurPos, rotateCurBlock] = useCurrentBlock();\n  const [stage, setStage, resetStage, updateStage, registerCollision] = useStage(currentBlock);\n  console.log(\"rerender\");\n\n  const checkBoundaries = (currentBlock, xdir, ydir) => {\n    let xPos = currentBlock.position.x;\n    let xPos2 = currentBlock.position2.x;\n    let yPos2 = currentBlock.position2.y; // STAGE_HEIGHT - 2 because 0 based indexing on coordinates, and position counts the top block so must end one earlier\n\n    if (xPos2 === 0 && xdir === -1 || xPos === STAGE_WIDTH - 1 && xdir === 1 || yPos2 === STAGE_HEIGHT - 1 && ydir === 1) {\n      return false;\n    } else {\n      return true;\n    }\n  };\n\n  const checkRotationBoundaries = currentBlock => {\n    let xPos = currentBlock.position.x;\n    let yPos = currentBlock.position.y;\n    let dir = currentBlock.dir; // Prevents rotation from upright to right on the right edge, rotating down on the bottom and rotating to the left on the left edge\n\n    if (dir === 0 && xPos === STAGE_WIDTH - 1 || dir === 1 && yPos === STAGE_HEIGHT - 1 || dir === 2 && xPos === 0) {\n      return false;\n    } else {\n      return true;\n    }\n  };\n\n  const checkCollision = (block, stage) => {\n    console.log(block.position2.y);\n\n    if (block.position2.y === STAGE_HEIGHT - 1 || stage[block.position2.y + 1][block.position2.x].props.type != \"EMPTY\" || (block.dir === 1 || block.dir === 3) && stage[block.position.y + 1][block.position.x].props.type != \"EMPTY\") {\n      return true;\n    } else {\n      return false;\n    }\n  };\n\n  const handleCollision = (block, stage) => {\n    let upperColor = randomBlock().color;\n    let lowerColor = randomBlock().color;\n    let newStage = registerCollision(block, stage, upperColor, lowerColor);\n    setStage(newStage);\n    let newBlock = resetCurPos(upperColor, lowerColor);\n    setCurBlock(newBlock);\n  };\n\n  const moveBlock = (xdir, ydir, prevPosition, prevPosition2, rotate) => {\n    let block;\n\n    if (checkBoundaries(currentBlock, xdir, ydir) && !rotate) {\n      block = updateCurPos(currentBlock, xdir, ydir);\n    } else if (checkRotationBoundaries(currentBlock) && rotate) {\n      block = rotateCurBlock(currentBlock);\n    } else {\n      return;\n    }\n\n    let curStage = updateStage(block, stage, prevPosition, prevPosition2);\n    setStage(curStage);\n\n    if (checkCollision(block, curStage)) {\n      handleCollision(block, curStage);\n    } else {\n      setCurBlock(block);\n    }\n  };\n\n  const startGame = () => {\n    // Providing the colours in this file maintains colour state across the current block and the stage\n    let upperColor = randomBlock().color;\n    let lowerColor = randomBlock().color;\n    setCurBlock(resetCurPos(upperColor, lowerColor));\n    setStage(resetStage(upperColor, lowerColor));\n  };\n\n  const move = ({\n    keyCode\n  }) => {\n    if (!gameOver) {\n      // Copy by value to preserve previous position\n      let prevPosition = Object.assign({}, currentBlock.position);\n      let prevPosition2 = Object.assign({}, currentBlock.position2);\n\n      if (keyCode === 37) {\n        moveBlock(-1, 0, prevPosition, prevPosition2, false);\n      } else if (keyCode === 39) {\n        moveBlock(1, 0, prevPosition, prevPosition2, false);\n      } else if (keyCode === 40) {\n        moveBlock(0, 1, prevPosition, prevPosition2, false);\n      } else if (keyCode === 38) {\n        moveBlock(0, 0, prevPosition, prevPosition2, true);\n      }\n    }\n  }; // Different screen for game over\n\n\n  if (!gameOver) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"puyo\",\n      tabIndex: \"0\",\n      onKeyDown: e => move(e),\n      children: [/*#__PURE__*/_jsxDEV(\"aside\", {\n        children: [/*#__PURE__*/_jsxDEV(Display, {\n          text: \"Score\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 115,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"startButton\",\n          children: /*#__PURE__*/_jsxDEV(Button, {\n            callBack: startGame,\n            text: \"New Game\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 117,\n            columnNumber: 11\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 116,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(Stage, {\n        stage: stage\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 5\n    }, this);\n  } else {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \" Game Over! Do you want to play again? \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"startButton\",\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          callBack: startGame,\n          text: \"New Game\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 128,\n          columnNumber: 7\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 7\n    }, this);\n  }\n};\n\n_s(Puyo, \"oYlFx1+RVNF5b7uw1RcxHFPD1r0=\", false, function () {\n  return [useCurrentBlock, useStage];\n});\n\n_c = Puyo;\nexport default Puyo;\n\nvar _c;\n\n$RefreshReg$(_c, \"Puyo\");","map":{"version":3,"sources":["/home/wyu/Desktop/puyo/puyo/src/components/Puyo.js"],"names":["React","createStage","STAGE_HEIGHT","STAGE_WIDTH","Stage","Display","Button","useState","useCurrentBlock","useStage","randomBlock","Puyo","gameOver","setGameOver","currentBlock","setCurBlock","updateCurPos","resetCurPos","rotateCurBlock","stage","setStage","resetStage","updateStage","registerCollision","console","log","checkBoundaries","xdir","ydir","xPos","position","x","xPos2","position2","yPos2","y","checkRotationBoundaries","yPos","dir","checkCollision","block","props","type","handleCollision","upperColor","color","lowerColor","newStage","newBlock","moveBlock","prevPosition","prevPosition2","rotate","curStage","startGame","move","keyCode","Object","assign","e"],"mappings":"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","sourcesContent":["import React from 'react';\n\nimport { createStage , STAGE_HEIGHT, STAGE_WIDTH } from '../gameHelpers';\nimport Stage from './Stage';\nimport Display from './Display';\nimport Button from './Button';\n\nimport { useState } from 'react';\nimport { useCurrentBlock } from '../hooks/useCurrentBlock';\nimport { useStage } from '../hooks/useStage';\nimport { randomBlock } from '../block';\n\nimport \"./Puyo.css\";\n\n\nconst Puyo = () => {\n  // GameOver is initially false\n  const [gameOver, setGameOver] = useState(false);\n  const [currentBlock, setCurBlock, updateCurPos, resetCurPos, rotateCurBlock] = useCurrentBlock();\n  const [stage, setStage, resetStage, updateStage, registerCollision] = useStage(currentBlock);\n\n  console.log(\"rerender\");\n\n  const checkBoundaries = (currentBlock, xdir, ydir) => {\n    let xPos = currentBlock.position.x;\n    let xPos2 = currentBlock.position2.x;\n    let yPos2 = currentBlock.position2.y;\n    // STAGE_HEIGHT - 2 because 0 based indexing on coordinates, and position counts the top block so must end one earlier\n    if ((xPos2 === 0 && xdir === -1) || (xPos === STAGE_WIDTH - 1 && xdir === 1) || (yPos2 === STAGE_HEIGHT - 1 && ydir === 1)) {\n      return false;\n    } else {\n      return true;\n    }\n  }\n\n  const checkRotationBoundaries = (currentBlock) => {\n    let xPos = currentBlock.position.x;\n    let yPos = currentBlock.position.y;\n    let dir = currentBlock.dir;\n    // Prevents rotation from upright to right on the right edge, rotating down on the bottom and rotating to the left on the left edge\n    if ((dir === 0 && xPos === STAGE_WIDTH - 1) || (dir === 1 && yPos === STAGE_HEIGHT - 1) || (dir === 2 && xPos === 0)) {\n      return false;\n    } else {\n      return true;\n    }\n  } \n\n  const checkCollision = (block, stage) => {\n    console.log(block.position2.y);\n    if ((block.position2.y === STAGE_HEIGHT - 1) || (stage[block.position2.y + 1][block.position2.x].props.type != \"EMPTY\") || \n    ((block.dir === 1 || block.dir === 3) && stage[block.position.y + 1][block.position.x].props.type != \"EMPTY\")) {\n      return true;\n    } else {\n      return false;\n    }\n  }\n\n  const handleCollision = (block, stage) => {\n    let upperColor = randomBlock().color;\n    let lowerColor = randomBlock().color;\n    let newStage = registerCollision(block, stage, upperColor, lowerColor);\n    setStage(newStage);\n    let newBlock = resetCurPos(upperColor, lowerColor)\n    setCurBlock(newBlock);\n  }\n\n  const moveBlock = (xdir, ydir, prevPosition, prevPosition2, rotate) => {\n    let block;\n    if (checkBoundaries(currentBlock, xdir, ydir) && !rotate) { \n      block = updateCurPos(currentBlock, xdir, ydir);\n    } else if (checkRotationBoundaries(currentBlock) && rotate) {\n      block = rotateCurBlock(currentBlock); \n    } else {\n      return;\n    }\n    let curStage = updateStage(block, stage, prevPosition, prevPosition2)\n    setStage(curStage);\n    if (checkCollision(block, curStage)) {\n      handleCollision(block, curStage);\n    } else {\n      setCurBlock(block);\n    }\n  }\n  \n  const startGame = () => {\n    // Providing the colours in this file maintains colour state across the current block and the stage\n    let upperColor = randomBlock().color;\n    let lowerColor = randomBlock().color;\n    setCurBlock(resetCurPos(upperColor, lowerColor));\n    setStage(resetStage(upperColor, lowerColor));\n  }\n  \n  const move = ({ keyCode }) => {\n    if (!gameOver) {\n      // Copy by value to preserve previous position\n      let prevPosition = Object.assign({}, currentBlock.position);\n      let prevPosition2 = Object.assign({}, currentBlock.position2);\n      if (keyCode === 37) {\n          moveBlock(-1, 0, prevPosition, prevPosition2, false);\n      } else if (keyCode === 39) {\n          moveBlock(1, 0, prevPosition, prevPosition2, false);\n      } else if (keyCode === 40) {\n          moveBlock(0, 1, prevPosition, prevPosition2, false)\n      } else if (keyCode === 38) {\n         moveBlock(0, 0, prevPosition, prevPosition2, true);\n      }\n    }\n  }\n\n  // Different screen for game over\n  if (!gameOver) {\n  return (\n    <div className = 'puyo' tabIndex = \"0\" onKeyDown={e => move(e)}>\n      <aside>\n        <Display text=\"Score\" />\n        <div className = \"startButton\">\n          <Button callBack = { startGame } text = \"New Game\"/>\n        </div>\n      </aside>\n      <Stage stage = { stage } />\n    </div>\n  )\n  } else {\n    return (\n      <div>\n      <h2> Game Over! Do you want to play again? </h2>\n      <div className = \"startButton\">\n      <Button callBack = { startGame } text = \"New Game\"/>\n      </div>\n      </div>\n    )\n  }\n};\n\nexport default Puyo;\n"]},"metadata":{},"sourceType":"module"}