{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { useState, useCallback } from 'react';\nimport { randomBlock } from '../block';\nimport { PUYO_COL, PUYO_ROW, rotationPosition, rotationPosition2 } from '../gameHelpers';\nexport const useCurrentBlock = () => {\n  _s();\n\n  // dir = 0 is up, dir = 1 is right, dir = 2 is down, dir = 3 is pointing left\n  // Initial state, never used anyway\n  const [currentBlock, setCurBlock] = useState({\n    position: {\n      x: PUYO_COL,\n      y: PUYO_ROW\n    },\n    position2: {\n      x: PUYO_COL,\n      y: PUYO_ROW + 1\n    },\n    color: 'EMPTY',\n    color1: 'EMPTY',\n    dir: 0\n  });\n\n  const updateCurPos = (prev, x, y) => {\n    return {\n      position: {\n        x: prev.position.x += x,\n        y: prev.position.y += y\n      },\n      position2: {\n        x: prev.position2.x += x,\n        y: prev.position2.y += y\n      },\n      color: prev.color,\n      color1: prev.color1,\n      dir: prev.dir\n    };\n  };\n\n  const resetCurPos = (upperColor, lowerColor) => {\n    return {\n      position: {\n        x: PUYO_COL,\n        y: PUYO_ROW\n      },\n      position2: {\n        x: PUYO_COL,\n        y: PUYO_ROW + 1\n      },\n      color: upperColor,\n      color1: lowerColor,\n      dir: 0\n    };\n  };\n\n  const rotateCurBlock = prev => {\n    let newDir = (prev.dir + 1) % 4;\n    let newPositions = rotationPosition(prev, newDir);\n    return {\n      position: newPositions.position,\n      position2: newPositions.position2,\n      color: prev.color,\n      color1: prev.color1,\n      dir: newDir\n    };\n  };\n\n  return [currentBlock, setCurBlock, updateCurPos, resetCurPos, rotateCurBlock];\n};\n\n_s(useCurrentBlock, \"Te0vX10KEnTTRThPolu/eWuRHmg=\");","map":{"version":3,"sources":["/home/wyu/Desktop/puyo/puyo/src/hooks/useCurrentBlock.js"],"names":["useState","useCallback","randomBlock","PUYO_COL","PUYO_ROW","rotationPosition","rotationPosition2","useCurrentBlock","currentBlock","setCurBlock","position","x","y","position2","color","color1","dir","updateCurPos","prev","resetCurPos","upperColor","lowerColor","rotateCurBlock","newDir","newPositions"],"mappings":";;AAAA,SAASA,QAAT,EAAmBC,WAAnB,QAAsC,OAAtC;AACA,SAAQC,WAAR,QAA2B,UAA3B;AACA,SAASC,QAAT,EAAmBC,QAAnB,EAA6BC,gBAA7B,EAA+CC,iBAA/C,QAAwE,gBAAxE;AAEA,OAAO,MAAMC,eAAe,GAAG,MAAM;AAAA;;AACjC;AACA;AACA,QAAM,CAACC,YAAD,EAAeC,WAAf,IAA8BT,QAAQ,CAAC;AACzCU,IAAAA,QAAQ,EAAE;AAAEC,MAAAA,CAAC,EAAER,QAAL;AAAeS,MAAAA,CAAC,EAAER;AAAlB,KAD+B;AAEzCS,IAAAA,SAAS,EAAE;AAACF,MAAAA,CAAC,EAAER,QAAJ;AAAcS,MAAAA,CAAC,EAAER,QAAQ,GAAG;AAA5B,KAF8B;AAGzCU,IAAAA,KAAK,EAAE,OAHkC;AAIzCC,IAAAA,MAAM,EAAE,OAJiC;AAKzCC,IAAAA,GAAG,EAAE;AALoC,GAAD,CAA5C;;AAQA,QAAMC,YAAY,GAAG,CAACC,IAAD,EAAOP,CAAP,EAAUC,CAAV,KAAgB;AACjC,WAAO;AACHF,MAAAA,QAAQ,EAAE;AAACC,QAAAA,CAAC,EAAIO,IAAI,CAACR,QAAL,CAAcC,CAAd,IAAmBA,CAAzB;AAA6BC,QAAAA,CAAC,EAAGM,IAAI,CAACR,QAAL,CAAcE,CAAd,IAAmBA;AAApD,OADP;AAEHC,MAAAA,SAAS,EAAE;AAACF,QAAAA,CAAC,EAAIO,IAAI,CAACL,SAAL,CAAeF,CAAf,IAAoBA,CAA1B;AAA8BC,QAAAA,CAAC,EAAGM,IAAI,CAACL,SAAL,CAAeD,CAAf,IAAoBA;AAAtD,OAFR;AAGHE,MAAAA,KAAK,EAAEI,IAAI,CAACJ,KAHT;AAIHC,MAAAA,MAAM,EAAEG,IAAI,CAACH,MAJV;AAKHC,MAAAA,GAAG,EAAEE,IAAI,CAACF;AALP,KAAP;AAOH,GARD;;AAUA,QAAMG,WAAW,GAAG,CAACC,UAAD,EAAaC,UAAb,KAA4B;AAC5C,WAAO;AACHX,MAAAA,QAAQ,EAAE;AAAEC,QAAAA,CAAC,EAAER,QAAL;AAAeS,QAAAA,CAAC,EAAER;AAAlB,OADP;AAEHS,MAAAA,SAAS,EAAE;AAACF,QAAAA,CAAC,EAAER,QAAJ;AAAcS,QAAAA,CAAC,EAAER,QAAQ,GAAG;AAA5B,OAFR;AAGHU,MAAAA,KAAK,EAAEM,UAHJ;AAIHL,MAAAA,MAAM,EAAEM,UAJL;AAKHL,MAAAA,GAAG,EAAE;AALF,KAAP;AAOH,GARD;;AAUA,QAAMM,cAAc,GAAIJ,IAAD,IAAU;AAC7B,QAAIK,MAAM,GAAG,CAACL,IAAI,CAACF,GAAL,GAAW,CAAZ,IAAkB,CAA/B;AACA,QAAIQ,YAAY,GAAGnB,gBAAgB,CAACa,IAAD,EAAOK,MAAP,CAAnC;AACA,WAAO;AACHb,MAAAA,QAAQ,EAAEc,YAAY,CAACd,QADpB;AAEHG,MAAAA,SAAS,EAAEW,YAAY,CAACX,SAFrB;AAGHC,MAAAA,KAAK,EAAEI,IAAI,CAACJ,KAHT;AAIHC,MAAAA,MAAM,EAAEG,IAAI,CAACH,MAJV;AAKHC,MAAAA,GAAG,EAAEO;AALF,KAAP;AAOH,GAVD;;AAYA,SAAO,CAACf,YAAD,EAAeC,WAAf,EAA4BQ,YAA5B,EAA0CE,WAA1C,EAAuDG,cAAvD,CAAP;AACH,CA5CM;;GAAMf,e","sourcesContent":["import { useState, useCallback } from 'react';\nimport {randomBlock } from '../block';\nimport { PUYO_COL, PUYO_ROW, rotationPosition, rotationPosition2 } from '../gameHelpers';\n\nexport const useCurrentBlock = () => {\n    // dir = 0 is up, dir = 1 is right, dir = 2 is down, dir = 3 is pointing left\n    // Initial state, never used anyway\n    const [currentBlock, setCurBlock] = useState({\n        position: { x: PUYO_COL, y: PUYO_ROW },\n        position2: {x: PUYO_COL, y: PUYO_ROW + 1},\n        color: 'EMPTY',\n        color1: 'EMPTY',\n        dir: 0\n    });\n    \n    const updateCurPos = (prev, x, y) => {\n        return {\n            position: {x : (prev.position.x += x), y: (prev.position.y += y)},\n            position2: {x : (prev.position2.x += x), y: (prev.position2.y += y)},\n            color: prev.color,\n            color1: prev.color1,\n            dir: prev.dir\n        };\n    };\n\n    const resetCurPos = (upperColor, lowerColor) => {\n        return {\n            position: { x: PUYO_COL, y: PUYO_ROW },\n            position2: {x: PUYO_COL, y: PUYO_ROW + 1},\n            color: upperColor,\n            color1: lowerColor,\n            dir: 0\n        };\n    };\n\n    const rotateCurBlock = (prev) => {\n        let newDir = (prev.dir + 1 ) % 4;\n        let newPositions = rotationPosition(prev, newDir);\n        return {\n            position: newPositions.position,\n            position2: newPositions.position2,\n            color: prev.color,\n            color1: prev.color1,\n            dir: newDir\n        };\n    };\n\n    return [currentBlock, setCurBlock, updateCurPos, resetCurPos, rotateCurBlock];\n}"]},"metadata":{},"sourceType":"module"}