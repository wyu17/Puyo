{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { useState, useCallback } from 'react';\nimport { randomBlock } from '../block';\nimport { PUYO_COL, PUYO_ROW } from '../gameHelpers';\nexport const useCurrentBlock = () => {\n  _s();\n\n  // dir = 0 is up, dir = 1 is right, dir = 2 is down, dir = 3 is pointing left\n  // Initial state, never used anyway\n  const [currentBlock, setCurBlock] = useState({\n    position: {\n      x: PUYO_COL,\n      y: PUYO_ROW\n    },\n    position2: {\n      x: PUYO_COL,\n      y: PUYO_ROW + 1\n    },\n    color: 'EMPTY',\n    color1: 'EMPTY',\n    dir: 0\n  });\n\n  const updateCurPos = (prev, x, y) => {\n    return {\n      position: {\n        x: prev.position.x += x,\n        y: prev.position.y += y\n      },\n      position2: {\n        x: prev.position2.x += x,\n        y: prev.position2.y += y\n      },\n      color: prev.color,\n      color1: prev.color1,\n      dir: prev.dir\n    };\n  };\n\n  const resetCurPos = (upperColor, lowerColor) => {\n    return {\n      position: {\n        x: PUYO_COL,\n        y: PUYO_ROW\n      },\n      position2: {\n        x: PUYO_COL,\n        y: PUYO_ROW + 1\n      },\n      color: upperColor,\n      color1: lowerColor,\n      dir: 0\n    };\n  };\n\n  const rotateCurBlock = prev => {\n    let curX = prev.position.x;\n    let curY = prev.position.y;\n    let curX2 = prev.position2.x;\n    let curY2 = prev.position.y;\n    let newDir = (prev.dir + 1) % 4;\n    let newPos, newPos2;\n\n    if (newDir === 0) {\n      newPos = {\n        x: curX,\n        y: curY - 1\n      };\n      newPos2 = {\n        x: curX2 + 1,\n        y: curY2\n      };\n    } else if (newDir === 1) {\n      newPos = {\n        x: curX + 1,\n        y: curY + 1\n      };\n      newPos2 = {\n        x: curX2,\n        y: curY2 + 1\n      };\n    } else if (newDir === 2) {\n      newPos = {\n        x: curX - 1,\n        y: curY\n      };\n      newPos2 = {\n        x: curX2,\n        y: curY2 + 1\n      };\n    } else if (newDir === 3) {\n      newPos = {\n        x: curX,\n        y: curY\n      };\n      newPos2 = {\n        x: curX2 - 1,\n        y: curY2\n      };\n    }\n\n    return {\n      position: newPos,\n      position2: newPos2,\n      color: prev.color,\n      color1: prev.color1,\n      dir: newDir\n    };\n  };\n\n  return [currentBlock, setCurBlock, updateCurPos, resetCurPos, rotateCurBlock];\n};\n\n_s(useCurrentBlock, \"Te0vX10KEnTTRThPolu/eWuRHmg=\");","map":{"version":3,"sources":["/home/wyu/Desktop/puyo/puyo/src/hooks/useCurrentBlock.js"],"names":["useState","useCallback","randomBlock","PUYO_COL","PUYO_ROW","useCurrentBlock","currentBlock","setCurBlock","position","x","y","position2","color","color1","dir","updateCurPos","prev","resetCurPos","upperColor","lowerColor","rotateCurBlock","curX","curY","curX2","curY2","newDir","newPos","newPos2"],"mappings":"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","sourcesContent":["import { useState, useCallback } from 'react';\nimport {randomBlock } from '../block';\nimport { PUYO_COL, PUYO_ROW } from '../gameHelpers';\n\nexport const useCurrentBlock = () => {\n    // dir = 0 is up, dir = 1 is right, dir = 2 is down, dir = 3 is pointing left\n    // Initial state, never used anyway\n    const [currentBlock, setCurBlock] = useState({\n        position: { x: PUYO_COL, y: PUYO_ROW },\n        position2: {x: PUYO_COL, y: PUYO_ROW + 1},\n        color: 'EMPTY',\n        color1: 'EMPTY',\n        dir: 0\n    });\n    \n    const updateCurPos = (prev, x, y) => {\n        return {\n            position: {x : (prev.position.x += x), y: (prev.position.y += y)},\n            position2: {x : (prev.position2.x += x), y: (prev.position2.y += y)},\n            color: prev.color,\n            color1: prev.color1,\n            dir: prev.dir\n        };\n    };\n\n    const resetCurPos = (upperColor, lowerColor) => {\n        return {\n            position: { x: PUYO_COL, y: PUYO_ROW },\n            position2: {x: PUYO_COL, y: PUYO_ROW + 1},\n            color: upperColor,\n            color1: lowerColor,\n            dir: 0\n        };\n    };\n\n    const rotateCurBlock = (prev) => {\n        let curX = prev.position.x;\n        let curY = prev.position.y;\n        let curX2 = prev.position2.x;\n        let curY2 = prev.position.y;\n        let newDir = (prev.dir + 1 ) % 4;\n        let newPos, newPos2;\n        if (newDir === 0) {\n            newPos = {x: curX, y: curY - 1};\n            newPos2 = {x: curX2 + 1, y: curY2};\n        } else if (newDir === 1) {\n            newPos = {x: curX + 1, y: curY + 1};\n            newPos2 = {x: curX2, y: curY2 + 1};\n        } else if (newDir === 2) {\n            newPos = {x: curX - 1, y: curY};\n            newPos2 = {x: curX2, y: curY2 + 1};\n        } else if (newDir === 3) {\n            newPos = {x: curX, y: curY};\n            newPos2 = {x: curX2 - 1, y: curY2};\n        }\n        return {\n            position: newPos,\n            position2: newPos2,\n            color: prev.color,\n            color1: prev.color1,\n            dir: newDir\n        };\n    };\n\n    return [currentBlock, setCurBlock, updateCurPos, resetCurPos, rotateCurBlock];\n}"]},"metadata":{},"sourceType":"module"}