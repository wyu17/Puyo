{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/home/wyu/Desktop/puyo/puyo/src/hooks/useStage.js\",\n    _s = $RefreshSig$();\n\nimport { useState, useEffect, useCallback } from 'react';\nimport { createStage, STAGE_HEIGHT, STAGE_WIDTH } from '../gameHelpers';\nimport Cell from '../components/Cell';\nimport { randomBlock } from '../block';\nimport { emptyBlock } from '../block';\nimport { BLOCK } from '../block';\nimport { PUYO_COL, PUYO_ROW } from '../gameHelpers';\nexport const useStage = (currentBlock, resetCurrentBlock) => {\n  _s();\n\n  // Initial State\n  const [stage, setStage] = useState(Array.from(Array(STAGE_HEIGHT), () => new Array(STAGE_WIDTH).fill( /*#__PURE__*/_jsxDEV(Cell, {\n    type: emptyBlock().color\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 11,\n    columnNumber: 106\n  }, this))));\n  const updateStage = useCallback((currentBlock, prevStage, prevPosition, prevPosition2) => {\n    let newStage = createStage();\n\n    for (let i = 0; i < STAGE_HEIGHT; i++) {\n      for (let j = 0; j < STAGE_WIDTH; j++) {\n        newStage[i][j] = prevStage[i][j];\n      }\n    }\n\n    ;\n\n    if (prevPosition && prevPosition2) {\n      newStage[prevPosition.y][prevPosition.x] = /*#__PURE__*/_jsxDEV(Cell, {\n        type: emptyBlock().color\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 56\n      }, this);\n      newStage[prevPosition2.y][prevPosition2.x] = /*#__PURE__*/_jsxDEV(Cell, {\n        type: emptyBlock().color\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 58\n      }, this);\n    } // Will need to implement some form of keeping blocks saved\n    // to:do guarantee different colours between the top and bottom\n\n\n    let temp = currentBlock.dir > 1 ? currentBlock.color1 : currentBlock.color;\n    let tempcolor1 = currentBlock.dir > 1 ? currentBlock.color : currentBlock.color1;\n    newStage[currentBlock.position.y][currentBlock.position.x] = /*#__PURE__*/_jsxDEV(Cell, {\n      type: temp\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 70\n    }, this);\n    newStage[currentBlock.position2.y][currentBlock.position2.x] = /*#__PURE__*/_jsxDEV(Cell, {\n      type: tempcolor1\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 72\n    }, this);\n    return newStage;\n  }, []);\n  const resetStage = useCallback((color, color1) => {\n    let newStage = createStage();\n    newStage[PUYO_ROW][PUYO_COL] = /*#__PURE__*/_jsxDEV(Cell, {\n      type: color\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 40\n    }, this);\n    newStage[PUYO_ROW + 1][PUYO_COL] = /*#__PURE__*/_jsxDEV(Cell, {\n      type: color1\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 44\n    }, this);\n    return newStage;\n  }, []);\n\n  const registerCollision = (block, stage, color, color1) => {\n    let newStage = createStage();\n\n    for (let i = 0; i < STAGE_HEIGHT; i++) {\n      for (let j = 0; j < STAGE_WIDTH; j++) {\n        newStage[i][j] = stage[i][j];\n      }\n    }\n\n    newStage[PUYO_ROW][PUYO_COL] = /*#__PURE__*/_jsxDEV(Cell, {\n      type: color\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 40\n    }, this);\n    newStage[PUYO_ROW + 1][PUYO_COL] = /*#__PURE__*/_jsxDEV(Cell, {\n      type: color1\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 44\n    }, this);\n    return newStage;\n  };\n\n  const emptyHeights = heights => {\n    for (let i = 0; i < heights.length; i++) {\n      if (heights[i].number != 0) {\n        return false;\n      }\n    }\n\n    return true;\n  };\n\n  const handleRemoval = (stage, removables) => {\n    let newStage = createStage();\n\n    for (let i = 0; i < STAGE_HEIGHT; i++) {\n      for (let j = 0; j < STAGE_WIDTH; j++) {\n        newStage[i][j] = stage[i][j];\n      }\n    }\n\n    let heights = new Array(6);\n\n    for (let i = 0; i < 6; i++) {\n      heights[i] = {\n        number: 0,\n        minHeight: 0\n      };\n    }\n\n    for (let i = 0; i < removables.length; i++) {\n      if (removables[i].length >= 4) {\n        for (let j = 0; j < removables[i].length; j++) {\n          let removeX = removables[i][j].x;\n          let removeY = removables[i][j].y;\n          newStage[removeY][removeX] = /*#__PURE__*/_jsxDEV(Cell, {\n            type: emptyBlock().color\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 77,\n            columnNumber: 51\n          }, this);\n          heights[removeX].number++;\n\n          if (heights[removeX].minHeight < removeY) {\n            heights[removeX].minHeight = removeY;\n          }\n        }\n      }\n    }\n\n    while (!emptyHeights(heights)) {\n      for (let i = 0; i < heights.length; i++) {\n        if (heights[i].number != 0) {\n          for (let j = heights[i].minHeight; j > 0; j--) {\n            newStage[j][i] = /*#__PURE__*/_jsxDEV(Cell, {\n              type: newStage[j - 1][i].props.type\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 89,\n              columnNumber: 42\n            }, this);\n          }\n\n          newStage[0][i] = /*#__PURE__*/_jsxDEV(Cell, {\n            type: emptyBlock().color\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 91,\n            columnNumber: 38\n          }, this);\n          heights[i].number--;\n        }\n      }\n    }\n\n    return newStage;\n  };\n\n  return [stage, setStage, resetStage, updateStage, registerCollision, handleRemoval];\n};\n\n_s(useStage, \"WbTWgvDvhWWCSb0Hq+Yz2DIwdyA=\");","map":{"version":3,"sources":["/home/wyu/Desktop/puyo/puyo/src/hooks/useStage.js"],"names":["useState","useEffect","useCallback","createStage","STAGE_HEIGHT","STAGE_WIDTH","Cell","randomBlock","emptyBlock","BLOCK","PUYO_COL","PUYO_ROW","useStage","currentBlock","resetCurrentBlock","stage","setStage","Array","from","fill","color","updateStage","prevStage","prevPosition","prevPosition2","newStage","i","j","y","x","temp","dir","color1","tempcolor1","position","position2","resetStage","registerCollision","block","emptyHeights","heights","length","number","handleRemoval","removables","minHeight","removeX","removeY","props","type"],"mappings":"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","sourcesContent":["import { useState, useEffect, useCallback } from 'react';\nimport { createStage, STAGE_HEIGHT, STAGE_WIDTH } from '../gameHelpers';\nimport Cell from '../components/Cell';\nimport { randomBlock } from '../block';\nimport { emptyBlock } from '../block';\nimport { BLOCK } from '../block';\nimport { PUYO_COL, PUYO_ROW } from '../gameHelpers';\n\nexport const useStage = (currentBlock, resetCurrentBlock) => {\n    // Initial State\n    const [stage, setStage] = useState(Array.from(Array(STAGE_HEIGHT), () => new Array(STAGE_WIDTH).fill(<Cell type = {emptyBlock().color}/>)));\n\n    const updateStage = useCallback ((currentBlock, prevStage, prevPosition, prevPosition2) => {\n        let newStage = createStage();\n        for (let i = 0; i < STAGE_HEIGHT; i++) {\n            for (let j = 0; j < STAGE_WIDTH; j++) {\n                newStage[i][j] = prevStage[i][j];\n            }\n        };\n        if (prevPosition && prevPosition2) {\n            newStage[prevPosition.y][prevPosition.x] = <Cell type = {emptyBlock().color}/>;\n            newStage[prevPosition2.y][prevPosition2.x] = <Cell type = {emptyBlock().color}/>;\n        }\n        // Will need to implement some form of keeping blocks saved\n        // to:do guarantee different colours between the top and bottom\n        let temp = (currentBlock.dir > 1) ? currentBlock.color1 : currentBlock.color;\n        let tempcolor1 =  (currentBlock.dir > 1) ? currentBlock.color : currentBlock.color1;\n        newStage[currentBlock.position.y][currentBlock.position.x] = <Cell type = {temp}/>;\n        newStage[currentBlock.position2.y][currentBlock.position2.x] = <Cell type = {tempcolor1}/>;\n        return newStage;\n    }, []);\n\n    const resetStage = useCallback((color, color1) => {\n        let newStage = createStage();\n        newStage[PUYO_ROW][PUYO_COL] = <Cell type = {color}/>;\n        newStage[PUYO_ROW + 1][PUYO_COL] = <Cell type = {color1}/>;\n        return newStage;\n    }, []);\n\n    const registerCollision = (block, stage, color, color1) => {\n        let newStage = createStage();\n        for (let i = 0; i < STAGE_HEIGHT; i++) {\n            for (let j = 0; j < STAGE_WIDTH; j++) {\n                newStage[i][j] = stage[i][j];\n            }\n        }\n        newStage[PUYO_ROW][PUYO_COL] = <Cell type = {color}/>;\n        newStage[PUYO_ROW + 1][PUYO_COL] = <Cell type = {color1}/>;\n        return newStage;\n    }\n\n    const emptyHeights = (heights) => {\n        for (let i = 0; i < heights.length; i++) {\n            if (heights[i].number != 0) {\n                return false;\n            }\n        }\n        return true;\n    }\n\n    const handleRemoval = (stage, removables) => {\n        let newStage = createStage();\n        for (let i = 0; i < STAGE_HEIGHT; i++) {\n            for (let j = 0; j < STAGE_WIDTH; j++) {\n                newStage[i][j] = stage[i][j];\n            }\n        }\n        let heights = new Array(6);\n        for (let i = 0; i < 6; i++) {\n            heights[i] = {number: 0, minHeight: 0};\n        }\n        for (let i = 0; i < removables.length; i++) {\n            if (removables[i].length >= 4) {\n                for (let j = 0; j < removables[i].length; j++) {\n                    let removeX = removables[i][j].x;\n                    let removeY = removables[i][j].y;\n                    newStage[removeY][removeX] =  <Cell type = {emptyBlock().color}/>;\n                    heights[removeX].number++;\n                    if (heights[removeX].minHeight < removeY) {\n                        heights[removeX].minHeight = removeY;\n                    }\n                }\n            }\n        }\n        while (!emptyHeights(heights)) {\n            for (let i = 0; i < heights.length; i++) {\n                if (heights[i].number != 0) {\n                    for (let j = heights[i].minHeight; j > 0; j--) {\n                        newStage[j][i] = <Cell type = {newStage[j - 1][i].props.type}/>;\n                    }\n                    newStage[0][i] = <Cell type = {emptyBlock().color}/>;\n                    heights[i].number--;\n                }\n            }\n        }\n        return newStage;\n    }\n\n    return [stage, setStage, resetStage, updateStage, registerCollision, handleRemoval];\n}"]},"metadata":{},"sourceType":"module"}